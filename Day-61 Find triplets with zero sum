FIND TRIPLETS WITH SUM ZERO
Given an array A[] of N elements. 
The task is to complete the function which returns true if triplets exists in array A whose sum is zero else returns false.

Example:
Input:
2
5
0 -1 2 -3 1
3
1 2 3

Output:
1
0

Explanation:
Testcase 1: 0, -1 and 1 forms a triplet with sum equal to 0.
Testcase 2: No triplet exists which sum to 0.

Approach: Take 3 nested loops. Check if sum of 3 number in the array is 0.
          If flag is one then triplet exist,
          else no triplet exist.
          
#User function Template for python3
''' Your task is to returns 1 if there is triplet with sum equal
    to 0 present in A[], else return 0'''
    
def findTriplets(a,n):
    #code here
    flag=0
    for i in range(0,n):
        for j in range(i+1,n):
            for k in range(j+1,n):
                if(a[i]+a[j]+a[k]==0):
                    flag=1
                    break;
                    
    if(flag==0):
        return 0
    else:
        return 1



#{ 
#  Driver Code Starts
#Initial Template for Python 3

import atexit
import io
import sys

_INPUT_LINES = sys.stdin.read().splitlines()
input = iter(_INPUT_LINES).__next__
_OUTPUT_BUFFER = io.StringIO()
sys.stdout = _OUTPUT_BUFFER

@atexit.register

def write():
    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())

if __name__=='__main__':
    t = int(input())
    for i in range(t):
        n=int(input())
        a=list(map(int,input().strip().split()))
        print(findTriplets(a,n))
# } Driver Code Ends
