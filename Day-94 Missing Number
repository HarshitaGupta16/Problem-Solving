MISSING NUMBER
Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.

Example 1:
Input: [3,0,1]
Output: 2

Example 2:
Input: [9,6,4,2,3,5,7,0,1]
Output: 8

Note:
Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?

Approach: First sort the given list.
          Run a for loop, start from i = 0 till the length of list.
          If the number "i" is already present in nums list then continue else return "i".
          
 #Code
 class Solution:
    def missingNumber(self, nums: List[int]) -> int:
        nums.sort()
        #flag = 0
        for i in range(0,len(nums)+1):
            if i in nums:
                continue
            else:
                return i
                
