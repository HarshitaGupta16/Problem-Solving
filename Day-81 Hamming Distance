HAMMING DISTANCE
The Hamming distance between two integers is the number of positions at which the corresponding bits are different.
Given two integers x and y, calculate the Hamming distance.

Note:
0 ≤ x, y < 231.

Example:
Input: x = 1, y = 4
Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

The above arrows point to positions where the corresponding bits are different.

Approach: Xor operation between the two numbers will give 1 when bits are different.
          Count the number of 1's. This gives the hamming distance between the 2 numbers.

class Solution:
    def hammingDistance(self, x: int, y: int) -> int:
        xor_xy = x ^ y
        #print(xor_xy)
        xor_xy = str(bin(xor_xy))
        return xor_xy.count('1')
