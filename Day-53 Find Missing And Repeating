FIND MISSING AND REPEATING
Given an unsorted array of size N of positive integers.
One number 'A' from set {1, 2, â€¦N} is missing and one number 'B' occurs twice in array. Find these two numbers.

Note: If you find multiple answers then print the Smallest number found. Also, expected solution is O(n) time and constant extra space.

Example:
Input:
2
2
2 2
3 
1 3 3

Output:
2 1
3 2

Explanation:
Testcase 1: Repeating number is 2 and smallest positive missing number is 1.
Testcase 2: Repeating number is 3 and smallest positive missing number is 2.

Appraoch: Take an array 'a' of size n+1 and initialize all its elements with zero.
          #CHECK REPEATING NUMBER
         1) Run a loop till n, take input of each element of array.
         2) Consider each input value i as index. 
         3) Check if, a[i]==n+1 (as n+1 will not be there in the array bcz array will have values less than n+1, you can also take any negative number like -1)
         4) if(a[i]==n+1), i is present twice, that is it is the repeating element.
         5) else, put a[i]=n+1
          #CHECK MISSING NUMBER
         1) Run loop from 1 to n+1
         2) If a[i]!=n+1 (That is number is not traversed previously, so not present in input array)
         3) missing_number = i
         4) break the loop
         
//C++ code

#include <iostream>
using namespace std;

int main() {
    int t;
    cin>>t;
    while(t--){
        int n,twice=0,mis=0;
        cin>>n;
        int a[n+1]={0};
        for(int i=0;i<n;i++){
            int x;
            cin>>x;
            if(a[x]==n+1){
                twice=x;
            }
            else a[x]=n+1;
        }
        for(int i=1;i<=n;i++){
            if(a[i]!=n+1){
                mis=i;
                break;
            }
        }
        cout<<twice<<" "<<mis<<endl;
    }
	//code
	return 0;
}
          
