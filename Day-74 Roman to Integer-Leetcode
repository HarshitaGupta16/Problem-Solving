ROMAN TO INTERGER
Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.

Symbol       Value
I             1
V             5
X             10
L             50
C             100
D             500
M             1000

Given a roman numeral, convert it to an integer. Input is guaranteed to be within the range from 1 to 3999.

Example 1:
Input: "III"
Output: 3

Example 2:
Input: "IV"
Output: 4

Example 3:
Input: "IX"
Output: 9

Example 4:
Input: "LVIII"
Output: 58
Explanation: L = 50, V= 5, III = 3.

Example 5:
Input: "MCMXCIV"
Output: 1994
Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.

Approach: Insert the symbols and values in a dictionary and name it 'd'.
          Store the s[n-1] value that is d[s[n-1]] in result.
          Start from the end index of the string and check:
          If the element is greater than or equal to the element on its right then, add the value to the result.
          Else, subtract the value from result.
          Return result.
          
class Solution:
    def romanToInt(self, s: str) -> int:
        d = {'I':1,'V':5,'X':10,'L':50,'C':100,'D':500,'M':1000}
        n = len(s)
        result = d[s[n-1]]
        #print(result)
        for i in range(n-2,-1,-1):
            if(d[s[i]] >= d[s[i+1]]):
                #print(d[s[i]])
                result += d[s[i]]     
                #print(result)
                
            else:
                result -= d[s[i]]
                
        return result
