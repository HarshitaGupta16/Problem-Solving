ADD DIGITS
Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.

Example:

Input: 38
Output: 2 
Explanation: The process is like: 3 + 8 = 11, 1 + 1 = 2. 
             Since 2 has only one digit, return it.
             
Follow up:
Could you do it without any loop/recursion in O(1) runtime?
             
Approach: Here, we don't have to use loop. So, recurssion is applied.
          Add the remainder after dividing number by 10 with the quotient.
          Now call the function passing the above value. 
          If value is less than 10 then return value otherwise keeping on adding till we get single digit number.

class Solution:
    def addDigits(self, num: int) -> int:
        if num < 10:
            return num
        return self.addDigits(num % 10 + num//10)
