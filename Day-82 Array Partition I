ARRAY PARTITION I
Given an array of 2n integers, your task is to group these integers into n pairs of integer, say (a1, b1), (a2, b2), ..., (an, bn) 
which makes sum of min(ai, bi) for all i from 1 to n as large as possible.

Example 1:

Input: [1,4,3,2]
Output: 4
Explanation: n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).

Note:
n is a positive integer, which is in the range of [1, 10000].
All the integers in the array will be in the range of [-10000, 10000].

Approach: In this question, we have to make pairs of numbers of array.
          Take the minimum of them and get the mximum sum. 
          So first, sort the array then start a loop, increase each time by 2.
          Take the minimum of the 2 numbers and add it to thee result.
          Return result.
          
class Solution:
    def arrayPairSum(self, nums: List[int]) -> int:
        n = len(nums)//2
        nums.sort()
        result = 0
        for i in range(0,len(nums),2):
            mini = min(nums[i],nums[i+1])
            result += mini
        return result
        
        
