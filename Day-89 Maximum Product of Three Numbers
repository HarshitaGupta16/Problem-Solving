MAXIMUM PRODUCT OF THREE NUMBERS
Given an integer array, find three numbers whose product is maximum and output the maximum product.

Example 1:
Input: [1,2,3]
Output: 6
 
Example 2:
Input: [1,2,3,4]
Output: 24
 
Note:
The length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].
Multiplication of any three numbers in the input won't exceed the range of 32-bit signed integer.

Approach: If the list has 3 numbers then the product of those 3 numbers will be the result.
          IF there are more than 3 numbers then sort the list in reverse order. 
          The product of first 3 numbers will be maximum or 
          if there are negative numbers then product of last 2 numbers with first number can also be maximum.
          Return maximum product.
          
class Solution:
    def maximumProduct(self, nums: List[int]) -> int:
        prod = 1
        if len(nums) == 3:
            return nums[0] * nums[1] * nums[2]
        nums.sort(reverse = True)
        return max(nums[0] * nums[1] *nums[2], nums[-1] * nums[-2] * nums[0])
        
